{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\aviasales-app\\\\src\\\\components\\\\transfers-filters\\\\transfers-filters.tsx\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from \"react\";\n/* import PropTypes from \"prop-types\";\r\n */\n\nimport classes from \"./transfers-filters.module.scss\";\nexport default function TransfersFilters({\n  stopsFilter,\n  tglAllCheckboxes,\n  tglCheckbox\n}) {\n  const checkboxes = [{\n    key: \"all\",\n    value: \"Все\"\n  }, {\n    key: \"0\",\n    value: \"Без пересадок\"\n  }, {\n    key: \"1\",\n    value: \"Одна пересадка\"\n  }, {\n    key: \"2\",\n    value: \"Две пересадки\"\n  }, {\n    key: \"3\",\n    value: \"Три пересадки\"\n  }];\n\n  const toggle = (evt, key) => {\n    const {\n      checked\n    } = evt.target;\n    console.log(evt);\n    if (key === \"all\") tglAllCheckboxes(checked);else tglCheckbox(key, checked);\n  };\n\n  const list = checkboxes.map(({\n    key,\n    value\n  }) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: value,\n      checked: stopsFilter[key],\n      onChange: evt => toggle(evt, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: value,\n      className: classes[\"custom-checkbox\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, value));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0441\\u0430\\u0434\\u043E\\u043A\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, list));\n}\n/* TransfersFilters.propTypes = {\r\n  stopsFilter: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\r\n  tglAllCheckboxes: PropTypes.func.isRequired,\r\n  tglCheckbox: PropTypes.func.isRequired,\r\n};\r\n */","map":{"version":3,"sources":["C:/React/aviasales-app/src/components/transfers-filters/transfers-filters.tsx"],"names":["React","classes","TransfersFilters","stopsFilter","tglAllCheckboxes","tglCheckbox","checkboxes","key","value","toggle","evt","checked","target","console","log","list","map","wrapper","title"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;;AACI,OAAOC,OAAP,MAAoB,iCAApB;AAOJ,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,WADuC;AAEvCC,EAAAA,gBAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAIU;AACvB,QAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,GAAG,EAAE,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADiB,EAEjB;AAAED,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAFiB,EAGjB;AAAED,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAHiB,EAIjB;AAAED,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAJiB,EAKjB;AAAED,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GALiB,CAAnB;;AAQA,QAAMC,MAAM,GAAG,CAACC,GAAD,EAA0CH,GAA1C,KAA0D;AACvE,UAAM;AAAEI,MAAAA;AAAF,QAAcD,GAAG,CAACE,MAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEA,QAAIH,GAAG,KAAK,KAAZ,EAAmBH,gBAAgB,CAACO,OAAD,CAAhB,CAAnB,KACKN,WAAW,CAACE,GAAD,EAAMI,OAAN,CAAX;AACN,GAND;;AAQA,QAAMI,IAAI,GAAGT,UAAU,CAACU,GAAX,CAAe,CAAC;AAAET,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KAAoB;AAC9C,wBACE;AAAI,MAAA,GAAG,EAAED,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAEC,KAFN;AAGE,MAAA,OAAO,EAAEL,WAAW,CAACI,GAAD,CAHtB;AAIE,MAAA,QAAQ,EAAGG,GAAD,IAAcD,MAAM,CAACC,GAAD,EAAMH,GAAN,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAO,MAAA,OAAO,EAAEC,KAAhB;AAAuB,MAAA,SAAS,EAAEP,OAAO,CAAC,iBAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,KADH,CAPF,CADF;AAaD,GAdY,CAAb;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACgB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEhB,OAAO,CAACiB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HADF,eAEE;AAAI,IAAA,SAAS,EAAEjB,OAAO,CAACc,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAA9B,CAFF,CADF;AAMD;AAED","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React from \"react\";\r\n/* import PropTypes from \"prop-types\";\r\n */ import classes from \"./transfers-filters.module.scss\";\r\n\r\ninterface TransfersFiltersType {\r\n  stopsFilter: any;\r\n  tglAllCheckboxes: (param: boolean) => void;\r\n  tglCheckbox: (key: string, param: boolean) => void;\r\n}\r\nexport default function TransfersFilters({\r\n  stopsFilter,\r\n  tglAllCheckboxes,\r\n  tglCheckbox,\r\n}: TransfersFiltersType) {\r\n  const checkboxes = [\r\n    { key: \"all\", value: \"Все\" },\r\n    { key: \"0\", value: \"Без пересадок\" },\r\n    { key: \"1\", value: \"Одна пересадка\" },\r\n    { key: \"2\", value: \"Две пересадки\" },\r\n    { key: \"3\", value: \"Три пересадки\" },\r\n  ];\r\n\r\n  const toggle = (evt: React.ChangeEvent<HTMLFormElement>, key: string) => {\r\n    const { checked } = evt.target;\r\n    console.log(evt);\r\n\r\n    if (key === \"all\") tglAllCheckboxes(checked);\r\n    else tglCheckbox(key, checked);\r\n  };\r\n\r\n  const list = checkboxes.map(({ key, value }) => {\r\n    return (\r\n      <li key={key}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={value}\r\n          checked={stopsFilter[key]}\r\n          onChange={(evt: any) => toggle(evt, key)}\r\n        />\r\n        <label htmlFor={value} className={classes[\"custom-checkbox\"]}>\r\n          {value}\r\n        </label>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <span className={classes.title}>Количество пересадок</span>\r\n      <ul className={classes.list}>{list}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* TransfersFilters.propTypes = {\r\n  stopsFilter: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\r\n  tglAllCheckboxes: PropTypes.func.isRequired,\r\n  tglCheckbox: PropTypes.func.isRequired,\r\n};\r\n */\r\n"]},"metadata":{},"sourceType":"module"}