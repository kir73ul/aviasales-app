{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\aviasales-app\\\\src\\\\containers\\\\App\\\\app.jsx\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../../actions\";\nimport classes from \"./app.module.scss\";\nimport logo from \"./Logo.png\";\nimport TransfersFilters from \"../../components/transfers-filters\";\nimport TicketsMenu from \"../../components/tickets-menu\";\nimport TicketsList from \"../../components/tickets-list\";\n\nfunction App({\n  items,\n  hasErrored,\n  isLoading,\n  stopsFilter,\n  priority,\n  tglCheckbox,\n  tglAllCheckboxes,\n  tglPriority,\n  fetchData\n}) {\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"logo-wrapper\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"main-wrapper\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TransfersFilters, {\n    stopsFilter: stopsFilter,\n    tglCheckbox: tglCheckbox,\n    tglAllCheckboxes: tglAllCheckboxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"sub-wrapper\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TicketsMenu, {\n    priority: priority,\n    tglPriority: tglPriority,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TicketsList, {\n    items: items,\n    hasErrored: hasErrored,\n    isLoading: isLoading,\n    stopsFilter: stopsFilter,\n    priority: priority,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst mapStateToProps = ({\n  ticketsReducer,\n  transfersReducer,\n  priorityReducer\n}) => {\n  const {\n    items,\n    hasErrored,\n    isLoading\n  } = ticketsReducer;\n  return {\n    items,\n    hasErrored,\n    isLoading,\n    stopsFilter: transfersReducer,\n    priority: priorityReducer\n  };\n}; //changing\n\n\nconst mapDispatchToProps = dispatch => {\n  const {\n    tglCheckbox,\n    tglAllCheckboxes,\n    tglPriority,\n    itemsFetchData: fetchData\n  } = bindActionCreators(actions, dispatch);\n  return {\n    tglCheckbox,\n    tglAllCheckboxes,\n    tglPriority,\n    fetchData\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nApp.propTypes = {\n  hasErrored: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  fetchData: PropTypes.func.isRequired,\n  stopsFilter: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n  priority: PropTypes.string.isRequired,\n  tglPriority: PropTypes.func.isRequired,\n  tglAllCheckboxes: PropTypes.func.isRequired,\n  tglCheckbox: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/React/aviasales-app/src/containers/App/app.jsx"],"names":["React","useEffect","PropTypes","connect","bindActionCreators","actions","classes","logo","TransfersFilters","TicketsMenu","TicketsList","App","items","hasErrored","isLoading","stopsFilter","priority","tglCheckbox","tglAllCheckboxes","tglPriority","fetchData","app","cover","mapStateToProps","ticketsReducer","transfersReducer","priorityReducer","mapDispatchToProps","dispatch","itemsFetchData","propTypes","bool","isRequired","arrayOf","object","func","objectOf","string"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actions from \"../../actions\";\r\nimport classes from \"./app.module.scss\";\r\nimport logo from \"./Logo.png\";\r\n\r\nimport TransfersFilters from \"../../components/transfers-filters\";\r\nimport TicketsMenu from \"../../components/tickets-menu\";\r\nimport TicketsList from \"../../components/tickets-list\";\r\n\r\nfunction App({\r\n  items,\r\n  hasErrored,\r\n  isLoading,\r\n  stopsFilter,\r\n  priority,\r\n  tglCheckbox,\r\n  tglAllCheckboxes,\r\n  tglPriority,\r\n  fetchData,\r\n}) {\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      <div className={classes.cover} />\r\n      <div className={classes[\"logo-wrapper\"]}>\r\n        <a href=\"/\">\r\n          <img src={logo} alt=\"logo\" />\r\n        </a>\r\n      </div>\r\n\r\n      <div className={classes[\"main-wrapper\"]}>\r\n        <TransfersFilters\r\n          stopsFilter={stopsFilter}\r\n          tglCheckbox={tglCheckbox}\r\n          tglAllCheckboxes={tglAllCheckboxes}\r\n        />\r\n        <div className={classes[\"sub-wrapper\"]}>\r\n          <TicketsMenu priority={priority} tglPriority={tglPriority} />\r\n          <TicketsList\r\n            items={items}\r\n            hasErrored={hasErrored}\r\n            isLoading={isLoading}\r\n            stopsFilter={stopsFilter}\r\n            priority={priority}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  ticketsReducer,\r\n  transfersReducer,\r\n  priorityReducer,\r\n}) => {\r\n  const { items, hasErrored, isLoading } = ticketsReducer;\r\n  return {\r\n    items,\r\n    hasErrored,\r\n    isLoading,\r\n    stopsFilter: transfersReducer,\r\n    priority: priorityReducer,\r\n  };\r\n};\r\n//changing\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const {\r\n    tglCheckbox,\r\n    tglAllCheckboxes,\r\n    tglPriority,\r\n    itemsFetchData: fetchData,\r\n  } = bindActionCreators(actions, dispatch);\r\n\r\n  return {\r\n    tglCheckbox,\r\n    tglAllCheckboxes,\r\n    tglPriority,\r\n    fetchData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\nApp.propTypes = {\r\n  hasErrored: PropTypes.bool.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\r\n  fetchData: PropTypes.func.isRequired,\r\n  stopsFilter: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\r\n  priority: PropTypes.string.isRequired,\r\n  tglPriority: PropTypes.func.isRequired,\r\n  tglAllCheckboxes: PropTypes.func.isRequired,\r\n  tglCheckbox: PropTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}